[1;36mSealGood - Assinatura e carimbo do tempo de documentos via OpenSSL + TSA[0m

Utiliza√ß√£o: sealgood help genkey { clean inject date sign verify }

COMANDOS:
  genkey    Gerar um novo par de chaves ed25519 protegido por senha
  help      Mostrar esta ajuda
  clean     Extrair conte√∫do original sem tags SEALGOOD
  inject    Injetar payload SealGood em arquivo PDF, HTML ou PEM
  date      Carimbar documento via terceira parte confi√°vel (TSA)
  sign      Assinar documento com sua chave privada
  verify    Verificar assinatura e carimbo do tempo do documento

  Comandos comp√µem um pipeline implicitamente ordenado:

  clean | inject | sign | date | verify
  - l√™ dados de stdin
  - comenta progresso em stderr
  - escreve dados em stdout
  - NUNCA escreve/modifica arquivos diretamente

  Quando entrada √© lista de arquivos, a lista √© enumerada
  e cada item √© processado no pipeline.
  Sa√≠da √© empacotada em formato tar+gzip com hashes
  criptogr√°ficos embutidos em nomes de arquivos assinados/carimbados
  enumerate
   \
     +-- clean | inject | sign | date | verify

  inject          respeita payload SealGood existente;
  sign date       executa implicitamente inject;
  sign date       respeita assinatura/carimbo existente;
  enumerate sign  pede senha da chave privada apenas uma vez.

Exemplos:
  sealgood sign date < contract.pdf > contract_sealgood.pdf
  sealgood verify    < contract_sealgood.pdf
  ls contract*.pdf | sealgood sign date > contracts.tgz

Arquivos utilizados:
  $HOME/.ssh/ed25519_private_*.pem  : chaves privadas do signat√°rio
  $HOME/.ssh/ed25519_public_*.pem   : chaves p√∫blicas associadas
  $HOME/.ssh/id_rsa.pub             : declara√ß√£o de identidade do signat√°rio
  https://freetsa.org/files/cacert.pem : certificado raiz TSA

Servlet livre :
  ssh -o SendEnv=LANGUAGE sealgood@perso.tlp.name {clean inject date verify}

Veja tamb√©m : https://github.com/tibolpol/sealgood

Copyright (c) 2025 Thibault Le Paul (@tibolpol)
Licence MIT - https://opensource.org/license/mit/
[1;32mmain output: inode/x-empty; charset=binary[0m
